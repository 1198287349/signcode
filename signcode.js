
var hexcase = 0x0;
var b64pad = '';
var chrsz = 0x8;

function hex_md5(_0x51ab72) {
  return binl2hex(core_md5(str2binl(_0x51ab72), _0x51ab72['length'] * chrsz));
}

function b64_md5(_0x1e9841) {
  return binl2b64(core_md5(str2binl(_0x1e9841), _0x1e9841['length'] * chrsz));
}

function str_md5(_0x1fe77f) {
  return binl2str(core_md5(str2binl(_0x1fe77f), _0x1fe77f['length'] * chrsz));
}

function hex_hmac_md5(_0x18fbe8, _0x320c8d) {
  return binl2hex(core_hmac_md5(_0x18fbe8, _0x320c8d));
}

function b64_hmac_md5(_0x30b875, _0x196ae1) {
  return binl2b64(core_hmac_md5(_0x30b875, _0x196ae1));
}

function str_hmac_md5(_0x28699b, _0x5afd6f) {
  return binl2str(core_hmac_md5(_0x28699b, _0x5afd6f));
}

function md5_vm_test() {
  return hex_md5('abc') == '900150983cd24fb0d6963f7d28e17f72';
}

function core_md5(_0x275230, _0x53c1fe) {
  _0x275230[_0x53c1fe >> 0x5] |= 0x80 << _0x53c1fe % 0x20;
  _0x275230[(_0x53c1fe + 0x40 >>> 0x9 << 0x4) + 0xe] = _0x53c1fe;
  var _0x2ab511 = 0x67452301;
  var _0xa00dbb = -0x10325477;
  var _0x6e8bba = -0x67452302;
  var _0xc30839 = 0x10325476;
  for (var _0x1fa1d4 = 0x0; _0x1fa1d4 < _0x275230['length']; _0x1fa1d4 += 0x10) {
    var _0x310c6a = _0x2ab511;
    var _0x47dd65 = _0xa00dbb;
    var _0x389b73 = _0x6e8bba;
    var _0x49ebe4 = _0xc30839;
    _0x2ab511 = md5_ff(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x0], 0x7, -0x28955b88);
    _0xc30839 = md5_ff(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x1], 0xc, -0x173848aa);
    _0x6e8bba = md5_ff(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0x2], 0x11, 0x242070db);
    _0xa00dbb = md5_ff(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x3], 0x16, -0x3e423112);
    _0x2ab511 = md5_ff(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x4], 0x7, -0xa83f051);
    _0xc30839 = md5_ff(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x5], 0xc, 0x4787c62a);
    _0x6e8bba = md5_ff(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0x6], 0x11, -0x57cfb9ed);
    _0xa00dbb = md5_ff(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x7], 0x16, -0x2b96aff);
    _0x2ab511 = md5_ff(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x8], 0x7, 0x698098d8);
    _0xc30839 = md5_ff(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x9], 0xc, -0x74bb0851);
    _0x6e8bba = md5_ff(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0xa], 0x11, -0xa44f);
    _0xa00dbb = md5_ff(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0xb], 0x16, -0x76a32842);
    _0x2ab511 = md5_ff(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0xc], 0x7, 0x6b901122);
    _0xc30839 = md5_ff(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0xd], 0xc, -0x2678e6d);
    _0x6e8bba = md5_ff(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0xe], 0x11, -0x5986bc72);
    _0xa00dbb = md5_ff(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0xf], 0x16, 0x49b40821);
    _0x2ab511 = md5_gg(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x1], 0x5, -0x9e1da9e);
    _0xc30839 = md5_gg(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x6], 0x9, -0x3fbf4cc0);
    _0x6e8bba = md5_gg(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0xb], 0xe, 0x265e5a51);
    _0xa00dbb = md5_gg(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x0], 0x14, -0x16493856);
    _0x2ab511 = md5_gg(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x5], 0x5, -0x29d0efa3);
    _0xc30839 = md5_gg(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0xa], 0x9, 0x2441453);
    _0x6e8bba = md5_gg(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0xf], 0xe, -0x275e197f);
    _0xa00dbb = md5_gg(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x4], 0x14, -0x182c0438);
    _0x2ab511 = md5_gg(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x9], 0x5, 0x21e1cde6);
    _0xc30839 = md5_gg(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0xe], 0x9, -0x3cc8f82a);
    _0x6e8bba = md5_gg(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0x3], 0xe, -0xb2af279);
    _0xa00dbb = md5_gg(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x8], 0x14, 0x455a14ed);
    _0x2ab511 = md5_gg(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0xd], 0x5, -0x561c16fb);
    _0xc30839 = md5_gg(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x2], 0x9, -0x3105c08);
    _0x6e8bba = md5_gg(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0x7], 0xe, 0x676f02d9);
    _0xa00dbb = md5_gg(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0xc], 0x14, -0x72d5b376);
    _0x2ab511 = md5_hh(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x5], 0x4, -0x5c6be);
    _0xc30839 = md5_hh(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x8], 0xb, -0x788e097f);
    _0x6e8bba = md5_hh(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0xb], 0x10, 0x6d9d6122);
    _0xa00dbb = md5_hh(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0xe], 0x17, -0x21ac7f4);
    _0x2ab511 = md5_hh(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x1], 0x4, -0x5b4115bc);
    _0xc30839 = md5_hh(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x4], 0xb, 0x4bdecfa9);
    _0x6e8bba = md5_hh(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0x7], 0x10, -0x944b4a0);
    _0xa00dbb = md5_hh(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0xa], 0x17, -0x41404390);
    _0x2ab511 = md5_hh(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0xd], 0x4, 0x289b7ec6);
    _0xc30839 = md5_hh(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x0], 0xb, -0x155ed806);
    _0x6e8bba = md5_hh(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0x3], 0x10, -0x2b10cf7b);
    _0xa00dbb = md5_hh(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x6], 0x17, 0x4881d05);
    _0x2ab511 = md5_hh(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x9], 0x4, -0x262b2fc7);
    _0xc30839 = md5_hh(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0xc], 0xb, -0x1924661b);
    _0x6e8bba = md5_hh(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0xf], 0x10, 0x1fa27cf8);
    _0xa00dbb = md5_hh(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x2], 0x17, -0x3b53a99b);
    _0x2ab511 = md5_ii(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x0], 0x6, -0xbd6ddbc);
    _0xc30839 = md5_ii(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x7], 0xa, 0x432aff97);
    _0x6e8bba = md5_ii(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0xe], 0xf, -0x546bdc59);
    _0xa00dbb = md5_ii(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x5], 0x15, -0x36c5fc7);
    _0x2ab511 = md5_ii(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0xc], 0x6, 0x655b59c3);
    _0xc30839 = md5_ii(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0x3], 0xa, -0x70f3336e);
    _0x6e8bba = md5_ii(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0xa], 0xf, -0x100b83);
    _0xa00dbb = md5_ii(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x1], 0x15, -0x7a7ba22f);
    _0x2ab511 = md5_ii(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x8], 0x6, 0x6fa87e4f);
    _0xc30839 = md5_ii(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0xf], 0xa, -0x1d31920);
    _0x6e8bba = md5_ii(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0x6], 0xf, -0x5cfebcec);
    _0xa00dbb = md5_ii(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0xd], 0x15, 0x4e0811a1);
    _0x2ab511 = md5_ii(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839, _0x275230[_0x1fa1d4 + 0x4], 0x6, -0x8ac817e);
    _0xc30839 = md5_ii(_0xc30839, _0x2ab511, _0xa00dbb, _0x6e8bba, _0x275230[_0x1fa1d4 + 0xb], 0xa, -0x42c50dcb);
    _0x6e8bba = md5_ii(_0x6e8bba, _0xc30839, _0x2ab511, _0xa00dbb, _0x275230[_0x1fa1d4 + 0x2], 0xf, 0x2ad7d2bb);
    _0xa00dbb = md5_ii(_0xa00dbb, _0x6e8bba, _0xc30839, _0x2ab511, _0x275230[_0x1fa1d4 + 0x9], 0x15, -0x14792c6f);
    _0x2ab511 = safe_add(_0x2ab511, _0x310c6a);
    _0xa00dbb = safe_add(_0xa00dbb, _0x47dd65);
    _0x6e8bba = safe_add(_0x6e8bba, _0x389b73);
    _0xc30839 = safe_add(_0xc30839, _0x49ebe4);
  }
  return Array(_0x2ab511, _0xa00dbb, _0x6e8bba, _0xc30839);
}

function md5_cmn(_0x283740, _0x24d9c9, _0x2c801f, _0x34de82, _0x2ea7c0, _0xafad49) {
  return safe_add(bit_rol(safe_add(safe_add(_0x24d9c9, _0x283740), safe_add(_0x34de82, _0xafad49)), _0x2ea7c0), _0x2c801f);
}

function md5_ff(_0x845892, _0x126736, _0x59589a, _0x2e81c7, _0x2c7c88, _0x4e1cfd, _0x2426b5) {
  return md5_cmn(_0x126736 & _0x59589a | ~_0x126736 & _0x2e81c7, _0x845892, _0x126736, _0x2c7c88, _0x4e1cfd, _0x2426b5);
}

function md5_gg(_0x170226, _0x31cb95, _0x112cfc, _0x53424d, _0x4e8baa, _0x3a67cf, _0x26ac2e) {
  return md5_cmn(_0x31cb95 & _0x53424d | _0x112cfc & ~_0x53424d, _0x170226, _0x31cb95, _0x4e8baa, _0x3a67cf, _0x26ac2e);
}

function md5_hh(_0x155379, _0xae0402, _0x113987, _0x7f8ab, _0x1550d1, _0x235bac, _0x3a6841) {
  return md5_cmn(_0xae0402 ^ _0x113987 ^ _0x7f8ab, _0x155379, _0xae0402, _0x1550d1, _0x235bac, _0x3a6841);
}

function md5_ii(_0x93738, _0x4a262e, _0x8f86c4, _0x539139, _0x2acd6a, _0x1eeb3b, _0x1ed79e) {
  return md5_cmn(_0x8f86c4 ^ (_0x4a262e | ~_0x539139), _0x93738, _0x4a262e, _0x2acd6a, _0x1eeb3b, _0x1ed79e);
}

function core_hmac_md5(_0x4397a6, _0x48522d) {
  var _0x4ff9fe = str2binl(_0x4397a6);
  if (_0x4ff9fe['length'] > 0x10) _0x4ff9fe = core_md5(_0x4ff9fe, _0x4397a6['length'] * chrsz);
  var _0x56eb7c = Array(0x10), _0x1fffcf = Array(0x10);
  for (var _0x3cfd5d = 0x0; _0x3cfd5d < 0x10; _0x3cfd5d++) {
    _0x56eb7c[_0x3cfd5d] = _0x4ff9fe[_0x3cfd5d] ^ 0x36363636;
    _0x1fffcf[_0x3cfd5d] = _0x4ff9fe[_0x3cfd5d] ^ 0x5c5c5c5c;
  }
  var _0x141e1a = core_md5(_0x56eb7c['concat'](str2binl(_0x48522d)), 0x200 + _0x48522d['length'] * chrsz);
  return core_md5(_0x1fffcf['concat'](_0x141e1a), 0x200 + 0x80);
}

function safe_add(_0x121b7b, _0x37fa4d) {
  var _0xcf6934 = (_0x121b7b & 0xffff) + (_0x37fa4d & 0xffff);
  var _0x114f7 = (_0x121b7b >> 0x10) + (_0x37fa4d >> 0x10) + (_0xcf6934 >> 0x10);
  return _0x114f7 << 0x10 | _0xcf6934 & 0xffff;
}

function bit_rol(_0x14f45f, _0x3464f7) {
  return _0x14f45f << _0x3464f7 | _0x14f45f >>> 0x20 - _0x3464f7;
}

function str2binl(_0x2adde8) {
  var _0x5464c2 = Array();
  var _0x400e4d = (0x1 << chrsz) - 0x1;
  for (var _0x5ccc07 = 0x0; _0x5ccc07 < _0x2adde8['length'] * chrsz; _0x5ccc07 += chrsz) _0x5464c2[_0x5ccc07 >> 0x5] |= (_0x2adde8['charCodeAt'](_0x5ccc07 / chrsz) & _0x400e4d) << _0x5ccc07 % 0x20;
  return _0x5464c2;
}

function binl2str(_0x5ed92a) {
  var _0x157c47 = '';
  var _0x2fc6a9 = (0x1 << chrsz) - 0x1;
  for (var _0x5ecc64 = 0x0; _0x5ecc64 < _0x5ed92a['length'] * 0x20; _0x5ecc64 += chrsz) _0x157c47 += String['fromCharCode'](_0x5ed92a[_0x5ecc64 >> 0x5] >>> _0x5ecc64 % 0x20 & _0x2fc6a9);
  return _0x157c47;
}

function binl2hex(_0x314e88) {
  var _0x48f0e7 = hexcase ? '0123456789ABCDEF' : '0123456789abcdef';
  var _0x1babe8 = '';
  for (var _0x17f409 = 0x0; _0x17f409 < _0x314e88['length'] * 0x4; _0x17f409++) {
    _0x1babe8 += _0x48f0e7['charAt'](_0x314e88[_0x17f409 >> 0x2] >> _0x17f409 % 0x4 * 0x8 + 0x4 & 0xf) + _0x48f0e7['charAt'](_0x314e88[_0x17f409 >> 0x2] >> _0x17f409 % 0x4 * 0x8 & 0xf);
  }
  return _0x1babe8;
}

function binl2b64(_0x21dd2f) {
  var _0x3ef198 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
  var _0x302d7f = '';
  for (var _0x2c5195 = 0x0; _0x2c5195 < _0x21dd2f['length'] * 0x4; _0x2c5195 += 0x3) {
    var _0x188fd8 = (_0x21dd2f[_0x2c5195 >> 0x2] >> 0x8 * (_0x2c5195 % 0x4) & 0xff) << 0x10 | (_0x21dd2f[_0x2c5195 + 0x1 >> 0x2] >> 0x8 * ((_0x2c5195 + 0x1) % 0x4) & 0xff) << 0x8 | _0x21dd2f[_0x2c5195 + 0x2 >> 0x2] >> 0x8 * ((_0x2c5195 + 0x2) % 0x4) & 0xff;
    for (var _0x1cfcd1 = 0x0; _0x1cfcd1 < 0x4; _0x1cfcd1++) {
      if (_0x2c5195 * 0x8 + _0x1cfcd1 * 0x6 > _0x21dd2f['length'] * 0x20) _0x302d7f += b64pad; else _0x302d7f += _0x3ef198['charAt'](_0x188fd8 >> 0x6 * (0x3 - _0x1cfcd1) & 0x3f);
    }
  }
  return _0x302d7f;
}


function getSign(_0xf52d2e) {
  var _0x599185 = {};
  var _0x3e10d9 = Object['keys'](_0xf52d2e)['sort']();
  for (var _0x1ddd14 in _0x3e10d9) {
    _0x599185[_0x3e10d9[_0x1ddd14]] = _0xf52d2e[_0x3e10d9[_0x1ddd14]];
  }
  var _0x5b927a = '';
  for (var _0xfa7f5b in _0x599185) {
    _0x5b927a = _0x5b927a + _0xfa7f5b + _0x599185[_0xfa7f5b];
  }
  var _0x5b927a = '43xxxEC' + _0x5b927a + '43xxxEC';
  _0x5b927a = _0x5b927a['toUpperCase']();
  return hex_md5(_0x5b927a);
}





function glLogin(account, pwd) {
  var data = {

    "appkey": "gl_rn_ef5075a71ee4",
    "uid": "21092289",
    "token": "eIPRUPmno4x4z9X3fjj-_g==",
    "client": "android",
    "deviceId": "0f00ca58-4e62-3704-bb9a-2ce04ce5025b",
    "encrypt": "1",
    "timestamp": "1637390634585",
    "version": "2.3.0",
    "branchNo": "0",
    "fundAccount": "500293125",
    "brand": "217",
    "pageCount": "30",
    "currentPage": "1",



  }
  data["signcode"] = getSign(data);
  console.log("guilv算signcode by：玄机", data)
}

//需要最新算法联系1198287349 无脑选手别来
// 这里输入账号密码
glLogin("xxx", "xxx");
